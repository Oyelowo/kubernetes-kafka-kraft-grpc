version: "3"

services:
  api:
    build:
      context: ./modules/api
      dockerfile: Dockerfile
    image: api
    volumes:
      - ./api:/backend
    environment:
      - API_PERSON_HOST=person
      - API_PERSON_PORT=50052
      - API_LOCATION_HOST=location # the container name
      - API_LOCATION_PORT=50051 # the container name
      #- FLASK_ENV=development
      #- FLASK_APP=app.py
    ports:
      - "30001:5000"

  api_person:
    build:
      context: ./modules/person/
      dockerfile: Dockerfile
    image: api_person
    container_name: person
    environment:
      - DB_USERNAME=ct_admin
      - DB_NAME=person
      - DB_HOST=postgres_person
      - DB_PORT=5432
      - DB_PASSWORD=wowimsosecure%
    ports:
      - "50052:50052"

  postgres_person:
    image: postgis/postgis:12-2.5-alpine
    container_name: postgres-person
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_USER=ct_admin
      - POSTGRES_PASSWORD=wowimsosecure%
      - POSTGRES_DB=person
    volumes:
      - /var/lib/postgres
      - dbscripts:/docker-entrypoint-initdb.d

  api_location:
    build:
      context: ./modules/location/
      dockerfile: Dockerfile
    image: api_location
    container_name: location
    environment:
      - DB_USERNAME=ct_admin
      - DB_NAME=location
      - DB_HOST=postgres_location
      - DB_PORT=5432
      - DB_PASSWORD=wowimsosecure%
      - API_PERSON_HOST=person
      - API_PERSON_PORT=50052
    ports:
      - "50051:50051"

  api_location_producer:
    build:
      context: ./modules/location-producer/
      dockerfile: Dockerfile
    image: api_location_producer
    container_name: location
    environment:
      - DB_USERNAME=ct_admin
      - DB_NAME=location
      - DB_HOST=postgres_location
      - DB_PORT=5432
      - DB_PASSWORD=wowimsosecure%
      - API_PERSON_HOST=person
      - API_PERSON_PORT=50052
    ports:
      - "50054:50054"

  postgres_location:
    image: postgis/postgis:12-2.5-alpine
    container_name: postgres-location
    ports:
      - "5434:5432"
    environment:
      - POSTGRES_USER=ct_admin
      - POSTGRES_PASSWORD=wowimsosecure%
      - POSTGRES_DB=location
    volumes:
      - /var/lib/postgres
      - dbscripts/:/docker-entrypoint-initdb.d

  client:
    tty: true
    build:
      context: ./modules/frontend
      dockerfile: Dockerfile
    command: ["npm", "start"]
    volumes:
      - ./client:/frontend
      - dbscripts:/frontend/node_modules
    environment:
      - NODE_ENV=development
    ports:
      - '3000:3000'
    depends_on:
      - api

  # kafka-kraft:
  #   build:
  #     context: ./kraft-mode-kafka-on-kubernetes-main/docker/
  #     dockerfile: Dockerfile
  #   environment:
  #     - REPLICAS='3'
  #     - SERVICE=kafka-svc
  #     - NAMESPACE=kafka-kraft
  #     - SHARE_DIR=/mnt/kafka
  #     #- FLASK_ENV=development
  #     #- FLASK_APP=app.py
  #   ports:
  #     - "9092:9092"
  #   volumes:
  #    - dbscripts:/mnt/kafka

volumes:
  # node-modules:
  dbscripts:
  # kafka-db:
    # external: false
